openapi: 3.0.3
info:
  title: SW API
  description: |-
    API for managing characters from 'Start Wars'
  termsOfService: http://swagger.io/terms/
  contact:
    email: ambro.szymon@gmail.com
  license:
    name: MIT
  version: 1.0.0
servers:
  - url: http://localhost:3000/dev/
paths:
  /characters:
    get:
      summary: Get list of characters
      operationId: getAll
      parameters:
        - name: limit
          in: query
          description: Limit of elements returned
          required: false
          schema:
            type: number
        - name: offset
          in: query
          description: Limit of elements returned
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'         
        '400':
          description: Invalid limit or offset supplied
    post:
      summary: Add new character to list
      description: Add new character to list
      operationId: create
      requestBody:
        description: Create new character
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
        required: true
      responses:
        '201':
          description: 'Successfuly created'
        '409':
          description: 'Character with such name already exists'
        '400':
          description: 'No name or invalid episodes'
        '500':
          description: Unexpected error
    put:
      summary: Update existing character
      description: Update existing character
      operationId: update
      requestBody:
        description: Update existing character
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
        required: true
      responses:
        '204':
          description: 'Successfuly updated'
        '404':
          description: 'Character with such name not exists'
        '400':
          description: 'No name or invalid episodes'
        '500':
          description: Unexpected error

    delete:
      summary: Update existing character
      description: Update existing character
      operationId: delete
      requestBody:
        description: Name of removed character
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Luke Skywalker'
        required: true
      responses:
        '204':
          description: 'Successfuly deleted'
        '404':
          description: 'Character with such name not exists'
        '400':
          description: 'No name'
        '500':
          description: Unexpected error
  /character/{userName}:
    get:
      summary: Find character by user name
      description: Find character by user name
      operationId: findOne
      parameters:
        - name: userName
          in: path
          description: Name of the character
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'          
        '404':
          description: No character
components:
  schemas:
    Character:
      type: object
      properties:
        name:
          type: string
          example: "Luke Skywalker"
        episodes:
            type: string
            enum:
              - NEWHOPE
              - EMPIRE
              - JEDI